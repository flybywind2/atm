[tool:pytest]
# Pytest configuration for ATM project

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for test organization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    system: End-to-end system tests
    performance: Performance and load tests
    quality: Output quality validation tests
    slow: Tests that take a long time to run
    network: Tests that require network access
    database: Tests that require database access
    llm: Tests that require LLM service
    rag: Tests that require RAG service
    hitl: Human-in-the-loop workflow tests
    recovery: Recovery and resilience tests
    frontend: Frontend component tests
    backend: Backend component tests

# Output and formatting
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --color=yes
    --disable-warnings

# Coverage configuration
[coverage:run]
source = backend/app
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = True
precision = 2
fail_under = 70

[coverage:html]
directory = tests/reports/coverage

[coverage:json]
output = tests/reports/coverage.json